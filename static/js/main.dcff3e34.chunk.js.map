{"version":3,"sources":["components/Pages/details/ItemCount.jsx","components/Pages/details/ItemDetail.jsx","components/navbar/links.js","components/navbar/LinkWidget.jsx","components/navbar/NavBar.jsx","components/footer/Footer.jsx","components/Pages/cart/ModalId.jsx","components/Pages/cart/Formulario.jsx","components/Pages/cart/ItemCartCount.jsx","components/Pages/cart/CartItem.jsx","components/Pages/cart/CartList.jsx","components/Pages/cart/Cart.jsx","components/Pages/details/ModalError.jsx","components/Pages/details/ItemDetailContainer.jsx","components/Pages/products/Item.jsx","components/Pages/products/ItemList.jsx","components/Pages/products/ItemListContainer.jsx","App.js","index.js","firebase.js","components/context/firebase-context.js","components/context/cart-context.js"],"names":["ItemCount","props","className","onClick","restar","valor","sumar","useStyles","makeStyles","root","maxWidth","ItemDetail","product","classes","verifyReply","useCart","setidPedido","useFirebase","useState","count","setCount","show","setShow","add","setAdd","to","size","Card","CardActionArea","CardMedia","component","alt","height","image","img","title","CardContent","Typography","gutterBottom","variant","name","color","description","price","stock","CardActions","Toast","onClose","delay","autohide","Header","style","background","Body","links","LinkWidget","totalItems","icon","marginLeft","fontSize","width","textAlign","borderRadius","NavBar","isLogged","authGoogle","signOut","Navbar","sticky","collapseOnSelect","expand","Container","fluid","Nav","Link","as","Figure","Image","src","Toggle","aria-controls","Collapse","id","map","i","p","Footer","rel","target","href","ModalId","handleClose","Modal","onHide","closeButton","Title","theme","margin","spacing","Formulario","useForm","register","handleSubmit","errors","formState","total","cartProducts","user","newPedido","length","onSubmit","data","placeholder","required","value","message","minLength","telefono","direccion","type","ItemCartCount","quit","quantity","Accordion","withStyles","boxShadow","borderBottom","display","expanded","MuiAccordion","AccordionSummary","marginBottom","minHeight","content","justifyContent","MuiAccordionSummary","AccordionDetails","padding","MuiAccordionDetails","table","Width","CartItem","modifyProduct","removeProduct","allProducts","stockItem","setstockItem","quantityEdit","setQuantityEdit","useEffect","forEach","square","TableContainer","Paper","Table","aria-label","TableHead","TableRow","TableCell","TableBody","CartList","removeAll","item","category","Cart","idPedido","ModalError","history","useHistory","push","ItemDetailContainer","useParams","prod","setProd","patchError","setPatchError","prodDetail","filter","media","Item","prodID","cat","ItemList","products","index","ItemListContainer","setProducts","prodByCat","getProducts","App","basename","process","exact","path","ReactDOM","render","StrictMode","document","getElementById","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","provider","GoogleAuthProvider","FirebaseContext","React","createContext","FirebaseProvider","setIsLogged","email","tokenId","uid","setUser","onAuthStateChanged","getIdToken","then","token","displayName","catch","error","console","log","setAllProducts","getProdFirebase","a","Axios","get","resData","productosArray","productoFinal","claves","Object","keys","clave","pedido","setpedido","updateStock","cartI","newStock","allP","patch","result","err","Provider","signInWithPopup","datosForm","date","Date","month","getMonth","day","getUTCDate","year","getUTCFullYear","finalDate","newOrder","buyer","nombre","items","totalPrice","post","response","context","useContext","Error","CartContext","CartProvider","pathname","useLocation","window","scrollTo","setCartProducts","setTotal","setTotalItems","modify","setModify","itemsTotal","addProduct","newProduct","removeFinale","coincidence","cant","addProductExistent"],"mappings":"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","file":"static/js/main.dcff3e34.chunk.js","sourcesContent":["import React from 'react'\r\nimport('./details.css')\r\nconst ItemCount = (props) => {\r\n    return (\r\n        <div className=\"countdetail-container\">\r\n            <button className='btn btn-danger' onClick={props.restar}>-</button>\r\n            <p>{props.valor}</p>\r\n            <button className='btn btn-success' onClick={props.sumar}>+</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ItemCount\r\n","import React, { useState} from 'react'\r\nimport ItemCount from './ItemCount'\r\nimport {useCart} from '../../context/cart-context'\r\nimport {useFirebase} from '../../context/firebase-context'\r\nimport { Link } from 'react-router-dom';\r\n\r\n//Importacion de bootstrap\r\nimport { Toast } from 'react-bootstrap';\r\n\r\n//Importaciones de MaterialUI\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n//Importaciones de React icons\r\nimport * as MdIcons from 'react-icons/md'\r\nimport * as GiIcons from 'react-icons/gi'\r\n\r\n//Propio de Material UI\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        maxWidth: 600,\r\n    },\r\n});\r\n\r\n\r\nconst ItemDetail = ({ product }) => {\r\n    const classes = useStyles();\r\n\r\n    const {verifyReply} = useCart()\r\n    const {setidPedido} = useFirebase()\r\n    //state para el contador, siempre desdde 1\r\n    const [count, setCount] = useState(1);\r\n    //states para el Toast de bootstrap y el btn para ir al cart\r\n    const [show, setShow] = useState(false);\r\n    const [add, setAdd] = useState(false);\r\n\r\n    const addItem = () => {\r\n       //Si se añadio un producto llamo a la funcion verifyReply, que se encarga de reemplazar o agregar\r\n        verifyReply(product,count)\r\n       //borro el mensaje de id si es que habia un pedido anterior\r\n        setidPedido('')\r\n        //Muestro el Toast y el btn\r\n        setAdd(true)\r\n        setShow(true)\r\n    }\r\n\r\n\r\n    //Estas funciones suman o restan, rango 1-stock\r\n    const onAdd = () => {\r\n        if (count < product.stock ) {\r\n            setCount(count + 1)\r\n        }\r\n        \r\n    }\r\n    const onQuit = () => {\r\n        if (count > 1) {\r\n            setCount(count - 1)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className=\"container-fluid pt-5 pb-5 \">\r\n\r\n\r\n                <div className=\"row m-auto\">\r\n                    <div className=\"col-11 col-sm-6 col-md-6 m-auto\" >\r\n\r\n\r\n                        <Link className='shadow-lg btn btn-primary mb-3' to='/productos'><MdIcons.MdArrowBack size={25} /></Link>\r\n                        <Card className={'shadow-lg  m-auto ' + classes.root}>\r\n                            <CardActionArea>\r\n                                <CardMedia\r\n                                    component=\"img\"\r\n                                    alt=\"Contemplative Reptile\"\r\n                                    height=\"350\"\r\n                                      image={product.img}\r\n                                    title=\"Contemplative Reptile\"\r\n                                />\r\n                                <CardContent>\r\n                                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                        {product.name}\r\n                                       \r\n                                      \r\n                                    </Typography>\r\n                                \r\n                                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                        {product.description}\r\n                                    </Typography>\r\n                                    <Typography variant=\"h6\" color=\"textPrimary\" component=\"p\">\r\n                                        Precio: ${product.price}  -  Stock:{product.stock}\r\n                                    </Typography>\r\n                                </CardContent>\r\n                            </CardActionArea>\r\n                            <CardActions className='d-flex justify-content-between'>\r\n                                {\r\n                                    product.stock <= 0?<p>Sin stock</p> :\r\n                                    <>\r\n                                        <ItemCount valor={count} sumar={onAdd} restar={onQuit} />\r\n                                        <button className='shadow-lg btn btn-warning' onClick={addItem}>Agregar al carrito</button>\r\n                                    </>\r\n                                }\r\n                              \r\n                            </CardActions>\r\n                        </Card>\r\n                        {add === true &&\r\n                            <div className='d-flex justify-content-center align-items-center mt-3'>\r\n                                <Link to='/carrito' className='btn btn-warning  w-80 d-flex justify-content-center align-items-center'><GiIcons.GiClick size={20} />  <span className='font-weight-bold  ml-1 mb-0'>Finalizá tu compra</span></Link>\r\n                            </div>\r\n\r\n                        }\r\n                        \r\n                    </div>\r\n\r\n                </div>\r\n                <Toast  onClose={() => setShow(false)} show={show} delay={3000} autohide>\r\n                            <Toast.Header style={{background: '#4caf50'}} className='d-flex justify-content-between text-white'>\r\n\r\n                                <strong className=\"me-auto\">Añadido con exito</strong>\r\n\r\n                            </Toast.Header>\r\n                            <Toast.Body>\r\n                                Puede editar su compra en el carrito\r\n                            </Toast.Body>\r\n                           \r\n                </Toast>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ItemDetail\r\n","import * as FaIcons from 'react-icons/fa'\r\nimport * as GiIcons from 'react-icons/gi'\r\n\r\n//Este array de objetos contiene cada link con su nombre, ruta e icono correspondiente. \r\n//La razon de hacerlo asi es para que sea mas dinamico a mi parecer.\r\nconst links = [\r\n   \r\n    {\r\n        \"icon\":  <FaIcons.FaStore size={25} color='ffac40'/>,\r\n        \"name\": \"Todos los Productos\",\r\n        \"to\": \"/\"\r\n    },\r\n    {\r\n        \"icon\":  <GiIcons.GiClothes size={25} color='ffac40'/>,\r\n        \"name\": \"Ropa\",\r\n        \"to\": \"/category/Ropa\"\r\n    },\r\n    {\r\n        \"icon\":  <GiIcons.GiBigDiamondRing size={25} color='ffac40'/>,\r\n        \"name\": \"Accesorios\",\r\n        \"to\": \"/category/Accesorios\"\r\n    },\r\n    {\r\n        \"icon\":  <FaIcons.FaShoppingCart size={25} color='ffac40'/>,\r\n        \"name\": \"Carrito\",\r\n        \"to\": \"/carrito\"\r\n    }\r\n   \r\n]\r\n\r\nexport default links","import React from 'react'\r\nimport {useCart} from '../context/cart-context'\r\n//Toma los props y renderiza\r\nconst LinkWidget = (props) => {\r\n    const {totalItems} = useCart()\r\n    return (\r\n        <div className=\"cardWidget\">\r\n           \r\n            <div className=\"d-flex align-items-center\"> \r\n            \r\n                {props.icon}\r\n               \r\n                 <span className=\"ml-2 \">{props.name}</span>\r\n                 {/* Si  el link es el carrito entonces en el se agrega la cantidad de items que tengo en el cart*/}\r\n                 {totalItems>0 && props.name==='Carrito' && <div style={{\r\n                     color: 'black',\r\n                     marginLeft: '5px',\r\n                     fontSize: '20px',\r\n                     background: 'white',\r\n                     width: '20px',\r\n                     textAlign: 'center',\r\n                     borderRadius: '5px'   \r\n                 }} className=\"cantCart\">{totalItems}</div>}\r\n            </div>\r\n           \r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LinkWidget\r\n\r\n\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport links from './links'\r\nimport LinkWidget from './LinkWidget'\r\nimport {useFirebase} from '../context/firebase-context'\r\n//Importaciones de bootstrap\r\nimport { Container, Figure, Nav, Navbar } from 'react-bootstrap'\r\nimport * as FcIcons from 'react-icons/fc'\r\nimport('./nav.css')\r\nconst NavBar = () => {\r\n    \r\n    const {isLogged,authGoogle,signOut} = useFirebase()\r\n    \r\n    const signIn = () => {\r\n        authGoogle()\r\n    }\r\n    const exit = () => {\r\n        signOut()\r\n    }\r\n    return (\r\n       \r\n\r\n        //ESTA NAVBAR ESTA HECHA CON BOOTSTRAP\r\n        //HAY UN ERROR/ADVERTENCIA GENERADA POR EL TOGGLE, SEGUN INTERNET ES PROPIO DE LA LIBRERIA\r\n\r\n        <Navbar sticky=\"top\" collapseOnSelect expand=\"lg\" className=\"navbar\">\r\n            <Container fluid>\r\n                <Nav.Link as={Link} to=\"/\" className='mr-5'>\r\n                    <Figure.Image\r\n                        width={150}\r\n                        height='auto'\r\n                        alt=\"logo\"\r\n                        src=\"https://i.imgur.com/C3zXSSv.png\"\r\n\r\n                    />\r\n                </Nav.Link >\r\n                <Navbar.Toggle className=\"navbar-toggle\" aria-controls=\"responsive-navbar-nav \" />\r\n                <Navbar.Collapse id=\"responsive-navbar-nav \">\r\n                    <Nav className=\"me-auto\">\r\n                    {\r\n\r\n                        //Mapeo el array links \r\n                    links.map((i,p ) =>{\r\n                        return(\r\n                            <Nav.Link key={p} className=\"mr-2\" as={Link} to={i.to}>\r\n                               <LinkWidget icon={i.icon} name={i.name} />\r\n                            </Nav.Link>\r\n                        \r\n                        )\r\n                    })\r\n\r\n                }\r\n                   \r\n                     {\r\n                         \r\n                         isLogged?<button onClick={exit} className=\"btn btn-danger\">Salir de la cuenta</button>: <button onClick={signIn} className=\"btn btn-light d-flex align-items-center justify-content-center\"><FcIcons.FcGoogle size={25}/><span className='text-dark  ml-2 '>Ingresar</span></button>\r\n                     }\r\n\r\n                    </Nav>\r\n                  \r\n                </Navbar.Collapse>\r\n            </Container>\r\n        </Navbar>\r\n\r\n    )\r\n}\r\n\r\nexport default NavBar\r\n","import React from 'react'\r\nimport * as RiIcons from 'react-icons/ri'\r\nimport('../styles.css')\r\nconst Footer = () => {\r\n    return (\r\n        <div className=\"footer \">\r\n            <div><p> Agape 2021</p></div>\r\n        \r\n            <div className=\"redes\">\r\n          \r\n                \r\n                    <a rel=\"noreferrer\" target=\"_blank\" href='https://www.instagram.com/agapetiendaonline/?hl=es'><RiIcons.RiInstagramFill size={30} /></a>\r\n\r\n                    <a rel=\"noreferrer\"  target=\"_blank\" href='https://www.facebook.com/pages/category/Clothing-Store/%C3%81gape-Tienda-Online-105297704567427/'><RiIcons.RiFacebookBoxFill size={30} /></a>\r\n\r\n                    <a rel=\"noreferrer\" target=\"_blank\"  href='https://api.whatsapp.com/send?phone=549356465-6612'> <RiIcons.RiWhatsappFill  size={30}/></a>\r\n               \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React,{useState} from 'react'\r\nimport { Modal } from 'react-bootstrap';\r\n\r\nconst ModalId = (props) => {\r\n    const [show, setShow] = useState(true);\r\n    \r\n    const handleClose = () => setShow(false);\r\n  \r\n    return (\r\n       \r\n             <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                <Modal.Title>Su id de la compra es:</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>{props.id}</Modal.Body>\r\n                <Modal.Footer>\r\n                <button className=\"btn btn-danger\" onClick={handleClose}>\r\n                    Cerrar\r\n                </button>\r\n                \r\n                </Modal.Footer>\r\n            </Modal>\r\n      \r\n    )\r\n}\r\n\r\nexport default ModalId\r\n","import React from 'react'\r\nimport { useCart } from '../../context/cart-context'\r\nimport { useFirebase } from '../../context/firebase-context'\r\nimport { useForm } from 'react-hook-form'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport * as IoIcons from 'react-icons/io'\r\nimport('./carrito.css')\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      width: '95%',\r\n    },\r\n  },\r\n}));\r\n\r\nconst Formulario = () => {\r\n  const classes = useStyles();\r\n  //LIBRERIA REACT-HOOK-FORM\r\n  const { register, handleSubmit, formState: { errors } } = useForm();\r\n  \r\n  const { total, cartProducts ,totalItems } = useCart()\r\n\r\n  const { isLogged, authGoogle, user,newPedido } = useFirebase()\r\n\r\n\r\n\r\n  const onsubmit = (data) => {\r\n    //Si se envia el form se llama a newPedido pasandole los datos del usuario\r\n    newPedido(data)\r\n  }\r\n  //Si se llama a signIn se ejecuta la funcion del Firebase-context para realizar el loggin\r\n  \r\n  const signIn = () => {\r\n    authGoogle()\r\n  }\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className={cartProducts.length === 0 ? 'formNone' : 'container-form '}>\r\n      <div className='container-precio d-flex align-items-center justify-content-center'>\r\n\r\n        <IoIcons.IoIosPricetags className='mr-2' color='ffa333' size={25} />\r\n        \r\n        <span className='form-precio m-0 '>{`Importe total: $${total}`}</span>\r\n\r\n      </div>\r\n      <div className='container-precio d-flex align-items-center justify-content-center'>\r\n\r\n      <IoIcons.IoIosPricetags className='mr-2' color='ffa333' size={25} />\r\n\r\n        <span className='form-precio m-0'>{`Cantidad de productos: ${totalItems}`}</span>\r\n\r\n      </div>  \r\n\r\n      <br />\r\n\r\n      <h5 className='form-titulo'>Finalice su compra</h5>\r\n      {isLogged === true && <>\r\n        <h6 className='m-0 '>Comprando como:</h6>\r\n        <p>{user.name}</p>\r\n      </>}\r\n      <form className={classes.root} onSubmit={handleSubmit(onsubmit)}>\r\n\r\n\r\n        {/* Esta forma de usar un input es de la libreria, me permite poner las condiciones y el mensaje de error */}\r\n        <input className='input mr-auto ml-auto mb-2 w-75'\r\n          placeholder='Número de teléfono'\r\n          name='telefono'\r\n          {...register('telefono', {\r\n            required: {\r\n              value: true,\r\n              message: 'Este campo es obligatorio.'\r\n            },\r\n            minLength: {\r\n              value: 6,\r\n              message: 'Minimo 6 carácteres'\r\n            }\r\n          })}\r\n        />\r\n\r\n        <span className=' leyenda-incorrecto text-danger'>{errors.telefono && errors.telefono.message}</span>\r\n        <input className='input mr-auto ml-auto mb-2 w-75'\r\n          name='direccion'\r\n          placeholder='Dirección'\r\n          {...register('direccion', {\r\n            required: {\r\n              value: true,\r\n              message: 'Este campo es obligatorio.'\r\n            },\r\n            minLength: {\r\n              value: 6,\r\n              message: 'Minimo 6 carácteres'\r\n            }\r\n          })}\r\n        />\r\n        <span className='leyenda-incorrecto text-danger'>{errors.direccion && errors.direccion.message}</span>\r\n\r\n\r\n        {isLogged === false ?\r\n          //Si no ingreso con una cuenta entonces el boton de enviar se reemplaza por el de ingresar\r\n          <>\r\n            <p className=\"text-center\">Inicie sesión con Google para enviar el pedido</p>\r\n            <button onClick={signIn} type='button' className=\"btn btn-primary\">Entrar con Google</button>\r\n          </>\r\n\r\n          : \r\n          //Se muestra el boton de enviar, el cual solo funciona si no tengo errores en el form gracias a la libreria\r\n\r\n          <button type=\"submit\" className=\"btn btn-danger\">Enviar</button>}\r\n       \r\n\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Formulario\r\n","import React from 'react'\r\n\r\nconst ItemCartCount = (props) => {\r\n    return (\r\n        <div className=\"countdetail-container\">\r\n            <button className='btn btn-danger  btn-sm' onClick={props.quit}>-</button>\r\n           \r\n          \r\n            <p className=\"display-4\"> {props.quantity}/{props.stock}</p>\r\n            <button className='btn btn-success  btn-sm' onClick={props.add}>+</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ItemCartCount\r\n","import React, {useState, useEffect} from 'react'\r\nimport ItemCartCount from './ItemCartCount'\r\nimport {useCart} from '../../context/cart-context'\r\nimport {useFirebase} from '../../context/firebase-context'\r\n//React Icons\r\nimport * as MdIcons from 'react-icons/md'\r\nimport * as BsIcons from 'react-icons/bs'\r\n//PARA EL ACCORDION DE Material UI\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport MuiAccordion from '@material-ui/core/Accordion';\r\nimport MuiAccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport MuiAccordionDetails from '@material-ui/core/AccordionDetails';\r\n\r\n//TABLA de Material UI\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport('./carrito.css')\r\n//ESTILOS PROPIOS DADOS POR MUI PARA ACCORDION\r\nconst Accordion = withStyles({\r\n  root: {\r\n    background: '#ffa333',\r\n\r\n    // border: '1px solid rgba(0, 0, 0, .125)',\r\n    boxShadow: 'none',\r\n    '&:not(:last-child)': {\r\n      borderBottom: 0,\r\n    },\r\n    '&:before': {\r\n      display: 'none',\r\n    },\r\n    '&$expanded': {\r\n      margin: 'auto',\r\n    },\r\n  },\r\n  expanded: {},\r\n})(MuiAccordion);\r\n\r\nconst AccordionSummary = withStyles({\r\n  root: {\r\n\r\n    borderBottom: '1px solid rgba(0, 0, 0, .125)',\r\n    marginBottom: -1,\r\n\r\n    minHeight: 56,\r\n    '&$expanded': {\r\n      minHeight: 56,\r\n    },\r\n  },\r\n  content: {\r\n    '&$expanded': {\r\n      margin: '12px 0',\r\n    },\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n  expanded: {},\r\n})(MuiAccordionSummary);\r\n\r\nconst AccordionDetails = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n    background: '#383838'\r\n  },\r\n}))(MuiAccordionDetails);\r\n//ESTILOS DADOS POR MUI PARA TABLA \r\nconst useStyles = makeStyles({\r\n  table: {\r\n    Width: '70%',\r\n  },\r\n});\r\n\r\n\r\nconst CartItem = (props) => {\r\n  const classes = useStyles();\r\n  const {modifyProduct,removeProduct} = useCart()\r\n  const {allProducts} = useFirebase()\r\n\r\n\r\n  const [stockItem, setstockItem] = useState(0)\r\n  //Contador del item, comienza con la cantidad agregada\r\n  const [quantityEdit, setQuantityEdit] = useState(props.quantity);\r\n  \r\n\r\n  //Este useEffect trae el stock del producto para limitar el count \r\n  //Quiza se podria  optimizar con algun memo? lo intente pero no me funciono, de todas formas solo esta filtrando pocos productos\r\n  useEffect(() => {\r\n    \r\n    allProducts.forEach(product => {\r\n      if(product.id === props.id){\r\n        setstockItem(product.stock)\r\n      }\r\n    })\r\n   \r\n   \r\n  },[])\r\n\r\n\r\n  const remove = () => {\r\n    //Llama a la funcion y le pasa el id del producto a remover\r\n    removeProduct(props.id)\r\n  }\r\n \r\n  //Funciones para el contador\r\n  const quit = () => {\r\n    if(quantityEdit>1){\r\n      setQuantityEdit(quantityEdit - 1)\r\n    }\r\n     \r\n   \r\n  }\r\n\r\n  const add = () => {\r\n      if(quantityEdit < stockItem){\r\n         setQuantityEdit(quantityEdit + 1)\r\n      }\r\n      \r\n  }\r\n\r\n\r\n  //Cuando modifico el count modifica la cantidad del producto\r\n  useEffect(() => {\r\n      modifyProduct(props.id, quantityEdit)\r\n  }, [quantityEdit]);\r\n\r\n\r\n  \r\n  \r\n  return (\r\n\r\n    <div className='item  '>\r\n      <Accordion square  >\r\n        <AccordionSummary aria-controls=\"panel1d-content\" id=\"panel1d-header\">\r\n          <h6 >{props.name}</h6>\r\n          \r\n          <BsIcons.BsArrowsExpand color='#1f1d1d' size={30} />\r\n        </AccordionSummary>\r\n        <AccordionDetails className='accordion-details'>\r\n          <TableContainer component={Paper}>\r\n            <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n              <TableHead>\r\n                <TableRow >\r\n\r\n                  <TableCell >{props.description}</TableCell>\r\n                 \r\n                  <TableCell></TableCell>\r\n\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n\r\n              \r\n\r\n                <TableRow>\r\n\r\n                  <TableCell >Precio/U</TableCell>\r\n                  <TableCell >${props.price}</TableCell>\r\n\r\n                </TableRow>\r\n                <TableRow>\r\n\r\n                  <TableCell >Cantidad</TableCell>\r\n                  <TableCell >\r\n                   \r\n                      <ItemCartCount stock={stockItem} quantity={quantityEdit} quit={quit} add={add}/>\r\n                    \r\n                    </TableCell>\r\n                  \r\n                </TableRow>\r\n                <TableRow>\r\n\r\n                  <TableCell >Total</TableCell>\r\n                  <TableCell >${props.price * quantityEdit}</TableCell>\r\n\r\n                </TableRow>\r\n                <TableRow>\r\n\r\n                  <TableCell >Borrar</TableCell>\r\n                  <TableCell > <button onClick={remove} className='btn btn-danger '>\r\n                    <MdIcons.MdDelete color='white' size={25} />\r\n\r\n                  </button></TableCell>\r\n\r\n                </TableRow>\r\n\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n\r\n        </AccordionDetails>\r\n      </Accordion>\r\n\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CartItem\r\n","import React from 'react'\r\nimport CartItem from './CartItem'\r\nimport { useCart } from '../../context/cart-context'\r\nimport {Link} from 'react-router-dom';\r\nconst CartList = () => {\r\n\r\n    const { cartProducts,removeAll } = useCart()\r\n    //Funcion que va a borrar el carrito, llamar directamente a removeAll no funciona;\r\n    const clear = () =>{\r\n        removeAll()\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <div>\r\n\r\n                {\r\n                    cartProducts.length === 0 ? <h4 className='text-center mb-3 text-danger  '>No hay productos</h4> :\r\n\r\n                        cartProducts.map((i) => {\r\n                            return (\r\n\r\n                                <CartItem key={i.item.id}\r\n                                    id={i.item.id}\r\n                                    category={i.item.category}\r\n                                    description={i.item.description}\r\n                                    img={i.item.img}\r\n                                    name={i.item.name}\r\n                                    price={i.item.price}\r\n                                    quantity={i.quantity}\r\n\r\n\r\n\r\n                                />\r\n                            )\r\n                        })\r\n\r\n                }\r\n            </div>\r\n           \r\n\r\n            <div className='w-100 d-flex align-items-center justify-content-center'>\r\n            {\r\n                cartProducts.length === 0 ? <Link className='btn btn-warning' to={'/'}>Comenzá a comprar</Link> :\r\n                <button className='btn btn-danger  w-50' onClick={clear}>Borrar todo</button>\r\n            }\r\n            \r\n            </div>\r\n        \r\n\r\n    </>\r\n    )\r\n}\r\n\r\nexport default CartList\r\n","import React from 'react'\r\nimport ModalId from './ModalId'\r\nimport Formulario from './Formulario'\r\nimport CartList from './CartList'\r\nimport { useFirebase } from '../../context/firebase-context'\r\nimport * as FaIcons from 'react-icons/fa'\r\nimport('./carrito.css')\r\n\r\n//Cart monta por un lado CartList y por otro el formulario para enviar\r\n\r\nconst Cart = () => {\r\n    //Traigo el state que guarda el id del pedido creado\r\n     const { idPedido} = useFirebase()\r\n    \r\n    return (\r\n        <div className='pages container pt-3'>\r\n            <div className=' container-titulo d-flex align-items-center justify-content-center '>\r\n              <span className='titulo mb-0 '>Carrito de compras</span>\r\n              <FaIcons.FaShoppingBag color='white' size={30}/>                  \r\n            </div>\r\n            {\r\n                //Si no esta vacio entonces se realizo una compra\r\n                  idPedido !== '' && \r\n                    //Llamo al ModalId, de bootstrap, para que la muestre como alert\r\n                     <ModalId id= {idPedido}/>\r\n              \r\n              }\r\n            <div className='container-items mt-5'>\r\n              {/* Aca va el CartList */}\r\n                <CartList/>\r\n\r\n                \r\n            </div>\r\n            \r\n            <Formulario />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cart\r\n","import React,{useState} from 'react'\r\nimport { Modal } from 'react-bootstrap';\r\nimport { useHistory  } from 'react-router-dom';\r\nconst ModalError = () => {\r\n    const [show, setShow] = useState(true);\r\n    let history = useHistory();\r\n\r\n    const handleClose = () => {\r\n        setShow(false)\r\n        history.push(\"/\");\r\n    };\r\n  \r\n    return (\r\n       \r\n             <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                <Modal.Title>Error en la busqueda:</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>El producto no existe</Modal.Body>\r\n                <Modal.Footer>\r\n                <button className=\"btn btn-danger\" onClick={handleClose}>\r\n                    Cerrar\r\n                </button>\r\n                \r\n                </Modal.Footer>\r\n            </Modal>\r\n      \r\n    )\r\n}\r\n\r\nexport default ModalError\r\n","import React, { useState, useEffect } from 'react'\r\nimport ItemDetail from './ItemDetail'\r\nimport ModalError from './ModalError'\r\nimport {useFirebase} from '../../context/firebase-context'\r\nimport { useParams} from 'react-router-dom';\r\nimport('../../styles.css')\r\nimport('./ItemDetail')\r\n\r\nconst ItemDetailContainer = () => {\r\n    \r\n    const {allProducts} = useFirebase()\r\n    \r\n\r\n    \r\n    //Trae el parametro id\r\n    const { id } = useParams();\r\n\r\n    //prod va a ser mi producto\r\n    const [prod, setProd] = useState([])\r\n    const [patchError, setPatchError] = useState(false)\r\n    \r\n\r\n    useEffect(() => {\r\n        //filtra mi array del cart(allProducts)\r\n            let prodDetail =  allProducts.filter(product => product.id === id)\r\n            //Si esta vacio, significa que el id de la url es invalido\r\n            if(prodDetail.length === 0) {\r\n                //Setea el state para que muestre el Modal\r\n                setPatchError(true)\r\n              \r\n               \r\n            }else{\r\n                    //Limpio el state  para que solo tenga un producto en detalle\r\n            setProd([])\r\n            //Por alguna razon no me seteaba el state\r\n            //Lo resolvi con el spread ...\r\n            setProd(...prodDetail)\r\n            }\r\n            \r\n        //React me advierte que en dependencies tambien va history y allProducts pero me anda bien con id\r\n    },[id]);\r\n   \r\n   \r\n    return (\r\n        <div className='pages'>\r\n            {/* Paso el state  */}\r\n            <ItemDetail product={prod}/>\r\n\r\n            {\r\n                patchError&&   <ModalError/>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ItemDetailContainer\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom';\r\n//MATERIAL UI\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\n//css\r\nimport('../../styles.css')\r\n\r\n//UTILIZA MATERIAL UI, HAY COSAS COMO useStyles que son propios de la libreria\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      maxWidth: 345,\r\n    },\r\n    media: {\r\n      height: 140,\r\n    },\r\n  });\r\n\r\n  const Item = (props) => {\r\n    \r\n    //Propio de materialUI\r\n    const classes = useStyles();\r\n      \r\n    return (\r\n        <div className='mb-5'>\r\n\r\n            <Card className={classes.root+\"  m-auto shadow-lg\" }>\r\n                \r\n                    <CardMedia\r\n                    className={classes.media}\r\n                    image={props.img}\r\n                    title=\"Contemplative Reptile\"\r\n                    />\r\n                    <CardContent>\r\n                    <Typography  variant=\"h5\" className='mb-2' component=\"h2\">\r\n                     {props.title}\r\n                    </Typography>\r\n                    \r\n                    <Typography  variant=\"h6\"  color=\"textPrimary\" component=\"p\">\r\n                     {'$'+props.price}\r\n                    </Typography>\r\n                    </CardContent>\r\n               \r\n                <CardActions className='p-3 d-flex justify-content-between align-items-center'>\r\n                    <Link className='btn btn-danger' to={'/item/'+props.prodID}>Ver más</Link>\r\n               \r\n                    <span >\r\n                    {props.cat}\r\n                    </span>\r\n                </CardActions>\r\n              </Card>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n         \r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Item\r\n","import React from 'react'\r\nimport Item from './Item'\r\n\r\nconst ItemList = (props) => {\r\n\r\n    return (\r\n        <div className=\"container-fluid pt-5\">\r\n\r\n\r\n            <div className=\"row m-auto \">\r\n                {/* Mapeo el producto */}\r\n                {\r\n                props.products.map((i,index ) =>{\r\n                    return(\r\n\r\n                        <div key={index}  className=\"col-10 col-sm-4 col-md-4 m-auto \" >\r\n                            <Item  prodID = {i.id} title={i.name} price={i.price} description={i.description} cat={i.category} img={i.img}/>\r\n                        </div>\r\n                    )\r\n                })\r\n                }\r\n\r\n               \r\n\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ItemList\r\n","import React, {useState, useEffect} from 'react'\r\nimport {useFirebase} from '../../context/firebase-context'\r\nimport ItemList from './ItemList'\r\nimport { useParams } from 'react-router-dom';\r\nimport('../../styles.css')\r\n\r\n\r\nconst ItemListContainer = () => {\r\n    //Mis productos desde el context\r\n    const {allProducts} = useFirebase()\r\n\r\n\r\n    //traigo category\r\n    const { category } = useParams();\r\n    \r\n    //estado donde guardo los productos\r\n    const [products, setProducts] = useState([]);\r\n   \r\n    \r\n    \r\n\r\n    \r\n    useEffect(()=>{ \r\n        const getProducts =  () =>{\r\n            //Si llega un parametro de category entonces\r\n            if(category){\r\n               //Filtro mi allProducts\r\n              let prodByCat = allProducts.filter(product => product.category === category)\r\n              setProducts(prodByCat)\r\n            }else{\r\n                //mis productos van a tener mi allProducts completo\r\n                setProducts(allProducts)\r\n              \r\n            }\r\n        }\r\n        getProducts()\r\n       \r\n    },[category,allProducts])\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  \r\n    return (\r\n        <div className=\"pages\">\r\n            <ItemList products={products}/>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ItemListContainer\r\n","import NavBar from './components/navbar/NavBar'\r\nimport Footer from './components/footer/Footer'\r\nimport Cart from './components/Pages/cart/Cart'\r\nimport ItemDetailContainer from './components/Pages/details/ItemDetailContainer'\r\nimport ItemListContainer from './components/Pages/products/ItemListContainer'\r\nimport { CartProvider } from './components/context/cart-context'\r\nimport { FirebaseProvider } from './components/context/firebase-context'\r\nimport {  HashRouter as Router , Switch, Route} from \"react-router-dom\";\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n\r\n  return (\r\n\r\n\r\n\r\n    //Uso Location de React Router en un context asi que necesito tener esto primero\r\n\r\n    //Esto del basename es para gh-pages, en produccion no se ve esa ruta repetida que se ve en el servidor de desarrollo\r\n    <Router basename={process.env.PUBLIC_URL} className=\"App\">\r\n\r\n      <CartProvider>\r\n        <FirebaseProvider>\r\n\r\n          <NavBar />\r\n\r\n\r\n          <Switch>\r\n            \r\n\r\n            <Route exact path={\"/\"} component={ItemListContainer} />\r\n            <Route exact path={\"/category/:category\"} component={ItemListContainer} />\r\n            <Route exact path={\"/item/:id\"} component={ItemDetailContainer} />\r\n            <Route exact path={\"/carrito\"} component={Cart} />\r\n\r\n            <Route path={\"*\"} component={ItemListContainer} />\r\n\r\n          </Switch>\r\n\r\n\r\n\r\n          <Footer />\r\n\r\n        </FirebaseProvider>\r\n\r\n\r\n      </CartProvider>\r\n\r\n\r\n\r\n\r\n    </Router>\r\n\r\n\r\n\r\n\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n","import firebase from 'firebase/app'\r\nimport 'firebase/auth';\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCs57LkTJ17PhrkEo5XPVY4b71sKw2-0BU\",\r\n    authDomain: \"agapeapp-7f28c.firebaseapp.com\",\r\n    projectId: \"agapeapp-7f28c\",\r\n    storageBucket: \"agapeapp-7f28c.appspot.com\",\r\n    messagingSenderId: \"1007000022642\",\r\n    appId: \"1:1007000022642:web:97d4831415780cd460dceb\"\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\nexport const auth = firebase.auth()\r\nexport const provider = new firebase.auth.GoogleAuthProvider();","import React, { useState, useEffect } from \"react\";\r\n\r\nimport {auth, provider} from \"../../firebase\"\r\n\r\nimport Axios from 'axios'\r\nimport { useCart } from './cart-context'\r\n\r\n\r\n//Inicio la app de firebase antes de comenzar el context\r\n\r\nconst FirebaseContext = React.createContext();\r\n\r\n\r\n\r\n//Provider\r\nexport function FirebaseProvider(props) {\r\n\r\n    //Necesito estas funciones y estados del cart-context \r\n    const { total, cartProducts, removeAll } = useCart()\r\n\r\n\r\n    //SECCION DE LOGIN DEL USUARIO\r\n\r\n    //State booleano que indica si esta loggeado o no, utilizado en el navbar para el btn de ingresar\r\n    const [isLogged, setIsLogged] = useState(false);\r\n\r\n    //Datos del usuario que se completan y vacian dependiendo si ingreso\r\n    const [user, setUser] = useState({\r\n        name: null,\r\n        email: null,\r\n        tokenId: null,\r\n        uid: null\r\n    })\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        //Esta funcion escucha si hay algun cambio de autenticacion\r\n        auth.onAuthStateChanged(user => {\r\n            if (user) {\r\n                //Si detecta que hay un usuario seteo el state IsLogged\r\n                setIsLogged(true)\r\n\r\n                //Ejecuto esta funcion que me devuelve su token, me sirve para cuando cree un pedido\r\n                user.getIdToken(true)\r\n                    .then((token) =>\r\n                        //Si recibo el token entonces completo los datos del usuario\r\n                        setUser({ name: user.displayName, email: user.email, tokenId: token, uid: user.uid })\r\n\r\n                    )\r\n                    .catch((error) => console.log(error))\r\n\r\n            } else {\r\n                //Si no detecta que hay un usuario, significa que salio o nunca entro\r\n                //Borro todo lo que tenga que ver con un usuario\r\n                setIsLogged(false)\r\n                setUser({ name: null, email: null, tokenId: null })\r\n\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    //Funcion que abre el popup de Google y permite ingresar con una cuenta\r\n    //Usado en el btn del navbar y el form\r\n    const authGoogle = () => {\r\n        auth.signInWithPopup(provider)\r\n    }\r\n    //Funcion que cierra sesión \r\n    const signOut = () => {\r\n        auth.signOut()\r\n\r\n    }\r\n\r\n\r\n    //SECCION DE PEDIDO DE PRODUCTO A LA DATABASE\r\n\r\n    const [allProducts, setAllProducts] = useState([]);\r\n\r\n    const getProdFirebase = async () => {\r\n        //Llamada get a la db\r\n        let data = await Axios.get('https://agapeapp-7f28c-default-rtdb.firebaseio.com/items.json')\r\n        let resData = data.data\r\n        /* \r\n            el array de productos viene asi:\r\n            [\r\n                id{\r\n                    dato:dato,\r\n                    dato:dato,\r\n                    dato:dato,\r\n                    dato:dato\r\n                },\r\n                id{\r\n                    dato:dato,\r\n                    dato:dato,\r\n                    dato:dato,\r\n                    dato:dato\r\n                },\r\n                id{\r\n                    dato:dato,\r\n                    dato:dato,\r\n                    dato:dato,\r\n                    dato:dato\r\n                }\r\n            ]\r\n\r\n            //Necesito que quede asi:\r\n\r\n            [\r\n                {\r\n                    id:id,\r\n                    dato:dato,\r\n                    dato:dato,\r\n                    dato:dato,\r\n                    dato:dato\r\n                },\r\n                {\r\n                    id:id,\r\n                    dato:dato,\r\n                    dato:dato,\r\n                    dato:dato,\r\n                    dato:dato\r\n                },\r\n                {\r\n                    id:id,\r\n                    dato:dato,\r\n                    dato:dato,\r\n                    dato:dato,\r\n                    dato:dato\r\n                }\r\n            ]\r\n        */\r\n        //El siguiente codigo hace eso. Quiza se podria optimizar pero es lo que se me ocurrio en el momento\r\n\r\n        let productosArray = []\r\n        let productoFinal = []\r\n        let claves = Object.keys(resData)\r\n        for (let i = 0; i < claves.length; i++) {\r\n            let clave = claves[i]\r\n\r\n            productosArray.push(resData[clave])\r\n        }\r\n\r\n        for (let i = 0; i < productosArray.length; i++) {\r\n\r\n            productoFinal.push({ id: claves[i], name: productosArray[i].name, description: productosArray[i].description, price: productosArray[i].price, img: productosArray[i].img, category: productosArray[i].category, stock: productosArray[i].stock })\r\n\r\n        }\r\n\r\n        setAllProducts(productoFinal)\r\n    }\r\n\r\n\r\n\r\n\r\n    //Se llama al montarse\r\n    useEffect(() => {\r\n        getProdFirebase()\r\n\r\n\r\n    }, [])\r\n\r\n\r\n\r\n    //SECCION DEL ARMADO DEL PEDIDO \r\n\r\n    const [pedido, setpedido] = useState({})\r\n    const [idPedido, setidPedido] = useState('');\r\n\r\n    //Funcion que se ejecuta cuando se envia el form\r\n    const newPedido = (datosForm) => {\r\n\r\n        //ATENCION: Segui los pasos que decia la presentacion de la clase para la libreria Timestamp\r\n        //No me funciono, me daba segundos y milisegundos. Lo resolvi usando esta funcion propia de js\r\n        //Termino creando una variable que indica la fecha actual(9/8/2021)\r\n        let date = new Date()\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getUTCDate();\r\n        let year = date.getUTCFullYear();\r\n\r\n        let finalDate = `${day}/${month}/${year}`\r\n\r\n        //Dentro del buyer uso los datos que obtengo del usuario por ingresar con Google\r\n        //Y los datos del form\r\n        let newOrder = {\r\n            buyer: {\r\n                nombre: user.name,\r\n                email: user.email,\r\n                direccion: datosForm.direccion,\r\n                telefono: datosForm.telefono,\r\n            },\r\n            //Items tiene los items del cart\r\n            items: [\r\n                ...cartProducts,\r\n\r\n            ],\r\n            date: finalDate,\r\n            totalPrice: total\r\n\r\n        }\r\n        setpedido(newOrder)\r\n        //Envia por post el pedido. tengo una subcoleccion dentro de la coleccion orders que corresponde al uid del usuario. dentro se coloca cada pedido\r\n        //Esto queda asi debido a la regla que le puse a la db.\r\n        /*\r\n           orders:{\r\n               userUID:{\r\n                   Pedido1:{\r\n\r\n                   }\r\n\r\n                   Pedido2:{\r\n\r\n                   }\r\n               },\r\n               userUID:{\r\n                   Pedido:{\r\n\r\n                   }\r\n\r\n               }\r\n           }\r\n        */\r\n\r\n\r\n        Axios.post(`https://agapeapp-7f28c-default-rtdb.firebaseio.com/orders/${user.uid}.json?auth=${user.tokenId}`, pedido)\r\n            .then(response =>\r\n                //Se guarda en el state idPedido el id para mostrar y se actualiza el stock\r\n                setidPedido(response.data.name),\r\n                updateStock())\r\n\r\n            .catch((error) => console.log(error))\r\n\r\n\r\n\r\n    }\r\n\r\n    const updateStock = () => {\r\n        //Se recorre el cart\r\n        cartProducts.forEach(cartI => {\r\n            //Se busca el producto que corresponde con ese id\r\n            let prod = allProducts.filter(allP => allP.id === cartI.item.id)\r\n            //Obtengo ese stock y le resto la cantidad que compro\r\n            let newStock = { stock: prod[0].stock - cartI.quantity }\r\n            //Actualizo ese stock del producto en la db\r\n            Axios.patch(`https://agapeapp-7f28c-default-rtdb.firebaseio.com/items/${cartI.item.id}.json`, newStock)\r\n                .then((result) => {\r\n                    //Borro el cart\r\n                    removeAll()\r\n                    //Llamo a los productos para actualizar el catalogo\r\n                    getProdFirebase()\r\n\r\n                }).catch((err) => {\r\n                    console.log(err)\r\n                });\r\n        })\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    return <FirebaseContext.Provider value={{\r\n        authGoogle,\r\n        isLogged,\r\n        signOut,\r\n        user,\r\n        allProducts,\r\n        newPedido,\r\n        idPedido,\r\n        setidPedido\r\n\r\n    }} {...props} />\r\n}\r\n\r\n\r\n\r\nexport function useFirebase() {\r\n    const context = React.useContext(FirebaseContext)\r\n\r\n    //asegurarme de que no lo estoy llamando en un componente que no es hijo\r\n    //solo es una verificacion\r\n    if (!context) {\r\n        throw new Error('useFirebase debe estar dentro del provider UseFirebase')\r\n    }\r\n\r\n    return context;\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nconst CartContext = React.createContext();\r\n\r\nexport function CartProvider(props) {\r\n\r\n    //Este useEffect hace que cada vez que cambio de ruta empiezo desde arriba\r\n    const { pathname } = useLocation();\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n    }, [pathname]);\r\n\r\n\r\n\r\n    //CART SECTION\r\n    //El state que tiene los items del cart\r\n    const [cartProducts, setCartProducts] = useState([])\r\n    //State para el importe total\r\n    const [total, setTotal] = useState(0);\r\n    //El state para el total de items que hay en el cart\r\n    const [totalItems, setTotalItems] = useState(0)\r\n\r\n    //State que me indica si se ejecuto la funcion modifyProduct, el contador desde el cart\r\n    const [modify, setModify] = useState(false)\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        //Suma todos los items para saber el total que compro\r\n        //tambien saco el importe total\r\n\r\n        let itemsTotal = 0\r\n        let totalPrice = 0\r\n        cartProducts.forEach(i => {\r\n            itemsTotal = itemsTotal + i.quantity\r\n            totalPrice = totalPrice + i.item.price * i.quantity\r\n        });\r\n\r\n        setTotalItems(itemsTotal)\r\n        setTotal(totalPrice)\r\n\r\n        setModify(false)\r\n\r\n\r\n\r\n    }, [cartProducts, modify])\r\n\r\n\r\n    const addProduct = (newProduct, quantity) => {\r\n        setCartProducts([...cartProducts, { item: newProduct, quantity: quantity }])\r\n\r\n    }\r\n\r\n    //Suma o resta items desde el contador del cart\r\n    const modifyProduct = (id, quantity) => {\r\n\r\n        let modify = cartProducts\r\n\r\n        modify.forEach(i => {\r\n            if (i.item.id === id) {\r\n                i.quantity = quantity;\r\n\r\n            }\r\n\r\n        });\r\n\r\n        setCartProducts(modify)\r\n        setModify(true)\r\n\r\n    }\r\n\r\n    //Funcion que se llama si se vuelve a cargar el mismo producto desde el catalogo \r\n    //Reemplaza el anterior que coincida, lo implemente de la idea de un compañero del curso\r\n\r\n    const addProductExistent = (newProduct, cant) => {\r\n        let modify = cartProducts\r\n\r\n        modify.forEach(i => {\r\n            if (i.item.id === newProduct.id) {\r\n                i.quantity = cant;\r\n\r\n            }\r\n\r\n        });\r\n\r\n        setCartProducts(modify)\r\n\r\n    }\r\n    // Esta funcion solo setea el state pero la necesito en el provider de firebase y en el cart\r\n    const removeAll = () => {\r\n        setCartProducts([])\r\n    }\r\n\r\n    //Elimina un producto por su id\r\n    const removeProduct = (id) => {\r\n        let removeFinale = cartProducts.filter(i => i.item.id !== id)\r\n        setCartProducts(removeFinale)\r\n\r\n    }\r\n\r\n\r\n\r\n    //Cuando se agrega un producto al cart se llama a la funcion\r\n    const verifyReply = (newProduct, quantity) => {\r\n\r\n        let coincidence = false\r\n        //Busca en el cart para saber si ya existia\r\n        for (const i in cartProducts) {\r\n            //si hay coincidencia  en el id\r\n            if (cartProducts[i].item.id === newProduct.id) {\r\n\r\n                coincidence = true\r\n\r\n            }\r\n        }\r\n\r\n\r\n        if (!coincidence) {\r\n            //No hay repetidos entonces puedo agregarlo\r\n            addProduct(newProduct, quantity)\r\n        } else {\r\n            //ya existe, hay que modificar\r\n            addProductExistent(newProduct, quantity)\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    return <CartContext.Provider value={{\r\n        cartProducts,\r\n        addProduct,\r\n        modifyProduct,\r\n        removeProduct,\r\n        verifyReply,\r\n        removeAll,\r\n        total,\r\n        totalItems\r\n\r\n    }} {...props} />\r\n}\r\n\r\n\r\nexport function useCart() {\r\n    const context = React.useContext(CartContext)\r\n\r\n    //asegurarme de que no lo estoy llamando en un componente que no es hijo\r\n    //solo es una verificacion\r\n    if (!context) {\r\n        throw new Error('useCart debe estar dentro del provider CartContext')\r\n    }\r\n\r\n    return context;\r\n}"],"sourceRoot":""}